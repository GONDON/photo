{"version":3,"sources":["photo/index.js","photo/use-checked.js","auth/children2.js","auth/debug.js","auth/children1.js","auth/hoc.js","auth/index.js","form/form.js","form/proxyForm.js","auth/demo1.js","App.js","serviceWorker.js","index.js"],"names":["Page","pictures","id","name","url","data","useReducer","CheckedMapParams","action","type","payload","dataItem","checked","console","log","newCheckedAll","newCheckedMap","forEach","checkedMap","dispatch","checkedAll","length","Object","entries","filter","Boolean","map","checkedId","find","Number","onCheckChange","onCheckedAllChange","useChecked","onCheckAll","e","item","target","className","onChange","keys","key","onCheck","src","alt","SetState2","this","props","state","index","Date","getTime","setState","React","Component","SetState1","proxyHoc","WrappedComponent","event","value","newProps","tree","assign","cloneElement","children","hijackHOC","Auth","Form","context","changeModel","model","onSubmit","nextProps","onClick","childContextTypes","PropTypes","object","func","Input","v_model","contextTypes","Counter","count","handleClick","title","Title","App","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.869955dc.chunk.js","sourcesContent":["import React from \"react\";\nimport { useChecked } from \"./use-checked\"\nimport \"./index.css\"\n\nconst Page = () => {\n  const pictures = [\n  {\n    id: '1',\n    name: 'foo',\n    url: 'https://gw.alipayobjects.com/mdn/rms_d212b7/afts/img/A*LlfeSa8N0WgAAAAAAAAAAABkARQnAQ'\n  },\n  {\n    id: '2',\n    name: 'foo',\n    url: 'https://gw.alipayobjects.com/mdn/rms_d212b7/afts/img/A*LlfeSa8N0WgAAAAAAAAAAABkARQnAQ'\n  },\n  {\n    id: '3',\n    name: 'foo',\n    url: 'https://gw.alipayobjects.com/mdn/rms_d212b7/afts/img/A*LlfeSa8N0WgAAAAAAAAAAABkARQnAQ'\n  },\n];\n\n    const {\n        checkedMap,\n        onCheckChange,\n        checkedAll,\n        onCheckedAllChange\n    } = useChecked(pictures)\n    const onCheckAll = (e,item)=>{\n        const { checked } = e.target\n        onCheckedAllChange(checked)\n    }\n  const Head = ()=>{\n      return (\n          <div className=\"check-all\">\n            <input\n                checked={checkedAll}\n                onChange={onCheckAll}\n                type=\"checkbox\"\n            />\n            全选\n            <span className='span'>{`已选中${Object.keys(checkedMap).length}个商品`}</span>\n        </div>\n      )\n  }\n  const onCheck = (e,item)=>{\n    const { checked } = e.target\n    onCheckChange(item,checked)\n  }\n    console.log(checkedMap)\n  return (\n    <div>\n        {Head()}\n        <div \n            className='img-list'\n        >\n            {\n                pictures.map(item => {\n                    const { id,name,url } = item\n                    const checked = checkedMap[item.id] || false\n                    return (\n                    <div key={id} >\n                        <input checked={checked} type=\"checkbox\" onChange={(e)=>{onCheck(e,item)}}/>\n                        <img src={url} alt='图片'/>\n                        <div>{name}</div>\n                    </div>\n                )\n            })}\n        </div>\n    </div>\n  )\n};\n\nexport default Page","import { useReducer } from \"react\"\n//勾选\nconst CHECKED_CHANGE = \"CHECKED_CHANGE\"\n//全选\nconst CHECKED_ALL_CHANGE = \"CHECKED_ALL_CHANGE\"\n\n//勾选\nexport const useChecked = (data,id)=>{\n    const [checkedMap, dispatch] = useReducer((CheckedMapParams,action)=>{\n        switch (action.type) {\n        case CHECKED_CHANGE: {\n          const { payload } = action\n          const { dataItem, checked } = payload\n          const { id } = dataItem\n          console.log(id); // 输出用户选择图片 id。\n          return {\n            ...CheckedMapParams,\n            [id]: checked,\n          }\n        }\n        case CHECKED_ALL_CHANGE: {\n          const { payload: newCheckedAll } = action\n          const newCheckedMap = {}\n          // 全选\n          if (newCheckedAll) {\n            data.forEach(dataItem => {\n              newCheckedMap[dataItem.id] = true\n            })\n          }\n          return newCheckedMap\n        }\n        default:\n          return CheckedMapParams\n      }\n    },{},\n    )\n    //勾选变更\n    const onCheckChange=(dataItem, checked) => {\n      dispatch({\n        type: CHECKED_CHANGE,\n        payload: {\n          dataItem,\n          checked,\n        },\n      })\n    }\n\n  const filterChecked = () => {\n    return (\n      Object.entries(checkedMap)\n        // 通过这个filter 筛选出所有checked状态为true的项\n        .filter(entries => Boolean(entries[1]))\n        // 再从Data中根据id来map出选中列表\n        .map(([checkedId]) => data.find(({ id }) => id === Number(checkedId)))\n    )\n  }\n  /** 是否全选状态 */\n  const checkedAll =data.length !== 0 && filterChecked().length === data.length\n  \n  /** 全选反选函数 */\n  const onCheckedAllChange = (newCheckedAll) => {\n    dispatch({\n      type: CHECKED_ALL_CHANGE,\n      payload: newCheckedAll,\n    })\n  }\n\n  return {\n    checkedMap,\n    dispatch,\n    onCheckChange,\n    checkedAll,\n    onCheckedAllChange,\n  }\n}","import React from \"react\";\nimport { debugHOC , hijackHOC } from \"./debug.js\";\n\n@debugHOC\nclass SetState2 extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {index: new Date().getTime()};\n    }\n    componentWillUpdate() {\n        console.log('componentWillUpdate222');\n    }\n\n    componentDidUpdate() {\n        console.log('componentDidUpdate222');\n    }\n\n    componentDidMount() {\n        console.log('SetState调用setState222');\n        this.setState({\n            index: this.state.index + 1\n        })\n        console.log('state2222', this.state.index);\n        \n        console.log('SetState调用setState222');\n        this.setState({\n            index: this.state.index + 1\n        })\n        console.log('state2222', this.state.index);\n    }\n    render() {\n        return(\n            <div>\n                2\n            </div>\n        )\n    }\n}\n\nexport default SetState2","import React from \"react\";\n\n/**\n  debug\n */\nfunction debugHOC(WrappedComponent) {\n  return class extends WrappedComponent {\n    render() {\n      console.log('props', this.props);\n      console.log('state', this.state);\n      return (\n        <div className=\"debuging\">\n          {super.render()}\n        </div>\n      )\n    }\n  }\n}\n\n/**\n渲染劫持\n */\nfunction hijackHOC(WrappedComponent) {\n  return class extends WrappedComponent {\n    render() {\n      const tree = super.render();\n      let newProps = {};\n      if (tree && tree.type === 'input') {\n        newProps = { value: '渲染被劫持了' };\n      }\n      const props = Object.assign({}, tree.props, newProps);\n      const newTree = React.cloneElement(tree, props, tree.props.children);\n      return newTree;\n    }\n  }\n}\n\n/**\n日志打点\n */\nfunction logHoc(WrappedComponent) {\n  return class extends React.Component {\n    componentWillMount() {\n      this.start = Date.now();\n    }\n    componentDidMount() {\n      this.end = Date.now();\n      // console.log(`${WrappedComponent.dispalyName} 渲染时间：${this.end - this.start} ms`);\n      // console.log(`${user}进入${WrappedComponent.dispalyName}`);\n    }\n    componentWillUnmount() {\n      // console.log(`${user}退出${WrappedComponent.dispalyName}`);\n    }\n    render() {\n      return <WrappedComponent {...this.props} />\n    }\n  }\n}\n\n/**\n可用、权限控制\nauthList是我们在进入程序时向后端请求的所有权限列表，当组件所需要的权限不列表中，\n或者设置的 visible是false，我们将其显示为传入的组件样式，或者null。\n我们可以将任何需要进行权限校验的组件应用HOC：\n  @auth\n  class Input extends Component {  ...  }\n  @auth\n  class Button extends Component {  ...  }\n\n  <Button auth=\"user/addUser\">添加用户</Button>\n  <Input auth=\"user/search\" visible={false} >添加用户</Input>\n */\nfunction auth(WrappedComponent) {\n  return class extends React.Component {\n    render() {\n      const { visible, auth, display = null, ...props } = this.props;\n      // if (visible === false || (auth && authList.indexOf(auth) === -1)) {\n      //   return display\n      // }\n      return <WrappedComponent {...props} />;\n    }\n  }\n}\n\nexport {\n    debugHOC,\n    hijackHOC\n}\n ","import React from \"react\";\n\n\nclass SetState1 extends React.Component{\n    constructor(props) {\n        super(props);\n        this.state = {index: new Date().getTime()};\n    }\n    componentWillUpdate() {\n        console.log('componentWillUpdate1111');\n    }\n\n    componentDidUpdate() {\n        console.log('componentDidUpdate1111');\n    }\n\n    componentDidMount() {\n        console.log('SetState调用setState1111');\n        this.setState({\n            index: this.state.index + 1\n        })\n        console.log('state11111', this.state.index);\n        \n        console.log('SetState调用setState11111');\n        this.setState({\n            index: this.state.index + 1\n        })\n        console.log('state1111', this.state.index);\n    }\n    render() {\n        return(\n            <div>\n                1\n            </div>\n        )\n    }\n}\n\nexport default SetState1","import React from \"react\";\nimport { debugHOC , hijackHOC } from \"./debug.js\";\n\nfunction proxyHoc(WrappedComponent) {\n  return class extends React.Component {\n    constructor(props) {\n      super(props);\n      this.state = { value: '' };\n    }\n\n    onChange = (event) => {\n      const { onChange } = this.props;\n      this.setState({\n        value: event.target.value,\n      }, () => {\n        if(typeof onChange ==='function'){\n          onChange(event);\n        }\n      })\n    }\n\n    render() {\n      const newProps = {\n        value: this.state.value, //双向绑定\n        onChange: this.onChange,\n      }\n      return <WrappedComponent {...this.props} {...newProps} />;\n    }\n  }\n}\n\n@hijackHOC\nclass HOC extends React.Component {\n  render() {\n    return <input {...this.props} ></input>\n  }\n}\n\nexport default proxyHoc(HOC);","import React from \"react\";\nimport SetState2 from \"./children2.js\";\nimport SetState1 from \"./children1.js\";\nimport Hoc from \"./hoc.js\";\n\nclass Auth extends React.Component{\n    componentDidMount() {\n        console.log('parent componentDidMount');\n    }\n    render() {\n        return(\n            <div>\n                <SetState2></SetState2>\n                <SetState1></SetState1>\n                <Hoc></Hoc>\n            </div>\n        )\n    }\n}\n\nexport default Auth","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nclass Form extends React.Component {\n  static childContextTypes = {\n    model: PropTypes.object,\n    changeModel: PropTypes.func\n  }\n  constructor(props, context) {\n    super(props, context);\n    this.state = {\n      model: props.model || {}\n    };\n  }\n  componentWillReceiveProps(nextProps) {\n    if (nextProps.model) {\n      this.setState({\n        model: nextProps.model\n      })\n    }\n  }\n  changeModel = (name, value) => {\n    this.setState({\n      model: { ...this.state.model, [name]: value }\n    })\n  }\n  getChildContext() {\n    return {\n      changeModel: this.changeModel,\n      model: this.props.model || this.state.model\n    };\n  }\n  onSubmit = () => {\n    console.log(this.state.model);\n  }\n  render() {\n    return <div>\n      {this.props.children}\n      <button onClick={this.onSubmit}>提交</button>\n    </div>\n  }\n}\n\nexport default Form\n","import React from \"react\";\nimport PropTypes from 'prop-types'\n\nfunction proxyHoc(WrappedComponent) {\n  return class extends React.Component {\n    static contextTypes = {\n      model: PropTypes.object,\n      changeModel: PropTypes.func\n    }\n\n    onChange = (event) => {\n      const { changeModel } = this.context;\n      const { onChange } = this.props;\n      const { v_model } = this.props;\n      changeModel(v_model, event.target.value);\n      if(typeof onChange === 'function'){onChange(event);}\n    }\n\n    render() {\n      const { model } = this.context;\n      const { v_model } = this.props;\n      return <WrappedComponent\n        {...this.props}\n        value={model[v_model]}\n        onChange={this.onChange}\n      />;\n    }\n  }\n}\n\n@proxyHoc\nclass Input extends React.Component {\n  render() {\n    return <input {...this.props}></input>\n  }\n}\n\nexport default Input","// import React from \"react\";\n// class Demo1 extends React.Component {\n//   constructor(props) {\n//     super(props);\n//     this.state = {\n//       count: 0,\n//       name: \"alife\"\n//     };\n//   }\n//   render() {\n//     const { count } = this.state;\n//     return (\n//       <div>\n//         Count: {count}\n//         <button onClick={() => this.setState({ count: count + 1 })}>+</button>\n//         <button onClick={() => this.setState({ count: count - 1 })}>-</button>\n//       </div>\n//     );\n//   }\n// }\n\n\n\n// import React, { useState } from \"react\";\n// function Demo1() {\n//   const [obj, setObject] = useState({\n//     count: 0,\n//     name: \"alife\"\n//   });\n//   return (\n//     <div className=\"App\">\n//       Count: {obj.count}\n//       <button onClick={() => setObject({ ...obj, count: obj.count + 1 })}>+</button>\n//       <button onClick={() => setObject({ ...obj, count: obj.count - 1 })}>-</button>\n//     </div>\n//   );\n// }\n\n\n// import React, { Component } from \"react\";\n// class Demo1 extends Component {\n//   state = {\n//     count: 1\n//   };\n//   componentDidMount() {\n//     const { count } = this.state;\n//     document.title = \"componentDidMount\" + count;\n//     this.timer = setInterval(() => {\n//       this.setState(({ count }) => ({\n//         count: count + 1\n//       }));\n//     }, 1000);\n//   }\n//   componentDidUpdate() {\n//     const { count } = this.state;\n//     document.title = \"componentDidMount\" + count;\n//   }\n//   componentWillUnmount() {\n//     document.title = \"componentWillUnmount\";\n//     clearInterval(this.timer);\n//   }\n//   render() {\n//     const { count } = this.state;\n//     return (\n//       <div>\n//         Count:{count}\n//         <button onClick={() => clearInterval(this.timer)}>clear</button>\n//       </div>\n//     );\n//   }\n// }\n\n// import React, { useState, useEffect,useContext } from \"react\";\n// let timer = null;\n// function Demo1() {\n//   const [count, setCount] = useState(0);\n//   useEffect(() => {\n//     document.title = \"componentDidMount\" + count;\n//   },[count]);\n\n//   useEffect(() => {\n//     timer = setInterval(() => {\n//       setCount(prevCount => prevCount + 1);\n//     }, 1000);\n//     return () => {\n//       document.title = \"componentWillUnmount\";\n//       clearInterval(timer);\n//     };\n//   }, []);\n//   return (\n//     <div>\n//       Count: {count}\n//       <button onClick={() => clearInterval(timer)}>clear</button>\n//     </div>\n//   );\n// }\n\n// const { Provider, Consumer } = React.createContext(null);\n// function Bar() {\n//   return <Consumer>{color => <div>{color}</div>}</Consumer>;\n// }\n// function Foo() {\n//   return <Bar />;\n// }\n// function Demo1() {\n//   return (\n//     <Provider value={\"grey\"}>\n//       <Foo />\n//     </Provider>\n//   );\n// }\n\n// const colorContext = React.createContext(\"gray\");\n// function Bar() {\n//   const color = useContext(colorContext);\n//   return <div>{color}</div>;\n// }\n// function Foo() {\n//   return <Bar />;\n// }\n// function Demo1() {\n//   return (\n//     <colorContext.Provider value={\"red\"}>\n//       <Foo />\n//     </colorContext.Provider>\n//   );\n// }\n\n// class Demo1 {\n//     render() {\n//         return <div>\n//             <SomeComponent style={{ fontSize: 14 }} doSomething={ () => { console.log('do something'); }}  />\n//         </div>;\n//     }\n// }\n\nimport React, { useState, useRef } from \"react\";\n// function Demo1() {\n//   let [name, setName] = useState(\"Nate\");\n//   let nameRef = useRef();\n//   const submitButton = () => {\n//     setName(nameRef.current.value);\n//   };\n//   return (\n//     <div className=\"App\">\n//       <p>{name}</p>\n\n//       <div>\n//         <input ref={nameRef} type=\"text\" />\n//         <button type=\"button\" onClick={submitButton}>\n//           Submit\n//         </button>\n//       </div>\n//     </div>\n//   );\n// }\n// var  _state = 0\n\n// function Demo1() {\n    // const [message, setMessage] = useState(\"\");\n  \n    // const showMessage = () => {\n    //   alert(\"You said: \" + message);\n    // };\n  \n    // const handleSendClick = () => {\n    //   setTimeout(showMessage, 3000);\n    // };\n  \n    // const handleMessageChange = e => {\n    //   setMessage(e.target.value);\n    // };\n  \n    // return (\n    //   <>\n    //     <input value={message} onChange={handleMessageChange} />\n    //     <button onClick={handleSendClick}>Send</button>\n    //   </>\n//     // );\n\n//     // function Counter() {\n//         function useState1(initialValue) {\n//             _state = initialValue;\n//             debugger\n//             function setState(newState) {\n//                 _state = newState;\n//             //   render();\n//             }\n//             return [_state, setState];\n//           }\n//         var [count, setCount] = useState1(0);\n      \n//         return (\n//           <div>\n//             <div>{count}</div>\n//             <div onClick={() => { setCount(count + 1); }}>\n//               点击\n//             </div>\n//           </div>\n//         );\n//     //   }\n      \n//   }\n  \n// let _deps; // _deps 记录 useEffect 上一次的 依赖\n\n// function useEffect(callback, depArray) {\n//   const hasNoDeps = !depArray; // 如果 dependencies 不存在\n//   const hasChangedDeps = _deps\n//     ? !depArray.every((el, i) => el === _deps[i]) // 两次的 dependencies 是否完全相等\n//     : true;\n//   /* 如果 dependencies 不存在，或者 dependencies 有变化*/\n//   if (hasNoDeps || hasChangedDeps) {\n//     callback();\n//     _deps = depArray;\n//   }\n// }\n\nimport ReactDOM from 'react-dom';\n\nclass Counter extends React.Component {\n  state = {\n    count: 0\n  }\n  handleClick = () => {\n    this.setState({ count: this.state.count + 1 })\n  }\n  render() {\n    return (\n      <div>\n        <Title title='计数器'></Title>\n        <span>{this.state.count}</span>\n        <button onClick={this.handleClick}>+1</button>\n      </div>\n    );\n  }\n}\n\nclass Title extends React.Component {\n  render() {\n    // 检查是否多次打印\n    console.log('Title render')\n    return (\n      <p>{this.props.title}</p>\n    );\n  }\n}\n\n\nexport default Counter","import React from 'react';\nimport Photo from './photo'\nimport Auth from './auth'\nimport Form from './form/form'\nimport Input from './form/proxyForm'\nimport Demo1 from './auth/demo1'\nimport './App.css';\n\nfunction App(){\n  return (\n    <div>\n      <Photo />\n      <Auth />\n      <Form >\n         <Input v_model=\"name\"></Input>\n        <Input v_model=\"pwd\"></Input>\n      </Form>\n      <Demo1/>\n    </div>\n  );\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}